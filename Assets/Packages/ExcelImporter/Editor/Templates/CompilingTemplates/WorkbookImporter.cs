using ExcelImporter.Editor.Processing;
using ExcelImporter.Editor.Utility;
using System.IO;
using UnityEditor;

/* -------------------------------------------------------
 * WARNING:
 *
 * This code was generated by the Excel Importer
 * Any changes will be lost, when it gets regenerated.
 * -----------------------------------------------------*/

namespace ExcelImporter.Editor.Templates.CompilingTemplates
{
    public class WorkbookImporter
    {
        private const string ExcelFilePath = "<EXCEL_FILEPATH>";
        private const string ImportBasePath = "<IMPORT_BASEPATH>";
        private const bool PrefixAssetName = true;

        [MenuItem("GameKit/Excel Importer/Import AdCampaign Data", priority = 3100)]
        public static void Import()
        {
            EditorUtils.Progress("Loading Workbook", 0f);
            var workbook = ExcelWorkbookFactory.Create(ExcelFilePath);

            var currentProgress = 0f;
            var progressStep = 1.0f / workbook.Sheets.Count;

            foreach (var sheetKey in workbook.Sheets.Keys)
            {
                currentProgress += progressStep;
                EditorUtils.Progress($"Importing Sheet: {sheetKey}", currentProgress);

                var sheet = workbook.Sheets[sheetKey];
                var importFilename = GetImportFilePath(workbook, sheet.Name, ImportBasePath, PrefixAssetName);

                SheetImporter.ImportData<SheetImport, SheetImport.Row>(workbook, sheet.Name, importFilename);
            }

            EditorUtils.Progress("Saving Assets", 1f);
            AssetDatabase.SaveAssets();

            UnityEngine.Debug.Log($"Imported {workbook.Sheets.Count} sheets from {workbook.FilePath}");
            EditorUtils.ProgressClear();
        }

        private static string GetImportFilePath(ExcelWorkbook workbook, string sheetName, string importBasePath, bool prefixAssetName)
        {
            var prefix = prefixAssetName ? $"{workbook.Name}." : string.Empty;
            var filename = $"{prefix}{sheetName}";

            return Path.Combine(importBasePath, filename);
        }
    }
}
