<CODEGEN_NOTICE>

using ExcelImporter.Editor.ExcelProcessing;
using ExcelImporter.Editor.Importers;
using System.IO;
using UnityEditor;
using UnityEngine;

namespace <NAMESPACE>
{
    public class <CLASS_NAME>
    {
        private const string ExcelFilePath = "<EXCEL_FILEPATH>";
        private const string ImportBasePath = "<IMPORT_BASEPATH>";
        private const bool PrefixAssetName = <PREFIX_ASSETNAME>;

        [MenuItem("<MENU_PATH>", priority = 100)]
        public static void Import()
        {
            EditorUtility.DisplayProgressBar("Excel Importer", "Loading Workbook", 0f);
            var workbook = ExcelWorkbookFactory.Create(ExcelFilePath);

<SHEET_IMPORT_STATEMENTS>

            EditorUtility.DisplayProgressBar("Excel Importer", "Saving Assets", 1f);
            AssetDatabase.SaveAssets();

            UnityEngine.Debug.Log($"Imported {workbook.Sheets.Count} sheets from {workbook.FilePath}");
            EditorUtility.ClearProgressBar();
        }

        private static void HandleSheet<TSheet, TRow>(ExcelWorkbook workbook, string sheetName)
            where TSheet : ScriptableObject
            where TRow : new()
        {
            var importFilename = GetImportFilePath(workbook, sheetName, ImportBasePath, PrefixAssetName);
            SheetImporter.ImportData<TSheet, TRow>(workbook, sheetName, importFilename);
        }

        private static string GetImportFilePath(ExcelWorkbook workbook, string sheetName, string importBasePath, bool prefixAssetName)
        {
            var prefix = prefixAssetName ? $"{workbook.Name}." : string.Empty;
            var filename = $"{prefix}{sheetName}.asset";

            return Path.Combine(importBasePath, filename);
        }
    }
}
